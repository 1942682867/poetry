package com.lin.entity.peotry;

import java.util.ArrayList;
import java.util.List;

public class PoetryWordBeanExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public PoetryWordBeanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andWordIsNull() {
            addCriterion("word is null");
            return (Criteria) this;
        }

        public Criteria andWordIsNotNull() {
            addCriterion("word is not null");
            return (Criteria) this;
        }

        public Criteria andWordEqualTo(String value) {
            addCriterion("word =", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordNotEqualTo(String value) {
            addCriterion("word <>", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordGreaterThan(String value) {
            addCriterion("word >", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordGreaterThanOrEqualTo(String value) {
            addCriterion("word >=", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordLessThan(String value) {
            addCriterion("word <", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordLessThanOrEqualTo(String value) {
            addCriterion("word <=", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordLike(String value) {
            addCriterion("word like", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordNotLike(String value) {
            addCriterion("word not like", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordIn(List<String> values) {
            addCriterion("word in", values, "word");
            return (Criteria) this;
        }

        public Criteria andWordNotIn(List<String> values) {
            addCriterion("word not in", values, "word");
            return (Criteria) this;
        }

        public Criteria andWordBetween(String value1, String value2) {
            addCriterion("word between", value1, value2, "word");
            return (Criteria) this;
        }

        public Criteria andWordNotBetween(String value1, String value2) {
            addCriterion("word not between", value1, value2, "word");
            return (Criteria) this;
        }

        public Criteria andWordSizeIsNull() {
            addCriterion("word_size is null");
            return (Criteria) this;
        }

        public Criteria andWordSizeIsNotNull() {
            addCriterion("word_size is not null");
            return (Criteria) this;
        }

        public Criteria andWordSizeEqualTo(Integer value) {
            addCriterion("word_size =", value, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordSizeNotEqualTo(Integer value) {
            addCriterion("word_size <>", value, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordSizeGreaterThan(Integer value) {
            addCriterion("word_size >", value, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordSizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("word_size >=", value, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordSizeLessThan(Integer value) {
            addCriterion("word_size <", value, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordSizeLessThanOrEqualTo(Integer value) {
            addCriterion("word_size <=", value, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordSizeIn(List<Integer> values) {
            addCriterion("word_size in", values, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordSizeNotIn(List<Integer> values) {
            addCriterion("word_size not in", values, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordSizeBetween(Integer value1, Integer value2) {
            addCriterion("word_size between", value1, value2, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordSizeNotBetween(Integer value1, Integer value2) {
            addCriterion("word_size not between", value1, value2, "wordSize");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeIsNull() {
            addCriterion("word_final_type is null");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeIsNotNull() {
            addCriterion("word_final_type is not null");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeEqualTo(Integer value) {
            addCriterion("word_final_type =", value, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeNotEqualTo(Integer value) {
            addCriterion("word_final_type <>", value, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeGreaterThan(Integer value) {
            addCriterion("word_final_type >", value, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("word_final_type >=", value, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeLessThan(Integer value) {
            addCriterion("word_final_type <", value, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeLessThanOrEqualTo(Integer value) {
            addCriterion("word_final_type <=", value, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeIn(List<Integer> values) {
            addCriterion("word_final_type in", values, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeNotIn(List<Integer> values) {
            addCriterion("word_final_type not in", values, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeBetween(Integer value1, Integer value2) {
            addCriterion("word_final_type between", value1, value2, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andWordFinalTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("word_final_type not between", value1, value2, "wordFinalType");
            return (Criteria) this;
        }

        public Criteria andRhythmIsNull() {
            addCriterion("rhythm is null");
            return (Criteria) this;
        }

        public Criteria andRhythmIsNotNull() {
            addCriterion("rhythm is not null");
            return (Criteria) this;
        }

        public Criteria andRhythmEqualTo(Integer value) {
            addCriterion("rhythm =", value, "rhythm");
            return (Criteria) this;
        }

        public Criteria andRhythmNotEqualTo(Integer value) {
            addCriterion("rhythm <>", value, "rhythm");
            return (Criteria) this;
        }

        public Criteria andRhythmGreaterThan(Integer value) {
            addCriterion("rhythm >", value, "rhythm");
            return (Criteria) this;
        }

        public Criteria andRhythmGreaterThanOrEqualTo(Integer value) {
            addCriterion("rhythm >=", value, "rhythm");
            return (Criteria) this;
        }

        public Criteria andRhythmLessThan(Integer value) {
            addCriterion("rhythm <", value, "rhythm");
            return (Criteria) this;
        }

        public Criteria andRhythmLessThanOrEqualTo(Integer value) {
            addCriterion("rhythm <=", value, "rhythm");
            return (Criteria) this;
        }

        public Criteria andRhythmIn(List<Integer> values) {
            addCriterion("rhythm in", values, "rhythm");
            return (Criteria) this;
        }

        public Criteria andRhythmNotIn(List<Integer> values) {
            addCriterion("rhythm not in", values, "rhythm");
            return (Criteria) this;
        }

        public Criteria andRhythmBetween(Integer value1, Integer value2) {
            addCriterion("rhythm between", value1, value2, "rhythm");
            return (Criteria) this;
        }

        public Criteria andRhythmNotBetween(Integer value1, Integer value2) {
            addCriterion("rhythm not between", value1, value2, "rhythm");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table poetry_word
     *
     * @mbg.generated do_not_delete_during_merge Mon Feb 05 16:55:49 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table poetry_word
     *
     * @mbg.generated Mon Feb 05 16:55:49 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}